<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yqz.webapp.mapper.ChatMessageMapper" >
  <resultMap id="BaseResultMap" type="com.yqz.webapp.dto.ChatMessage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sender_id" property="senderId" jdbcType="INTEGER" />
    <result column="receiver_id" property="receiverId" jdbcType="INTEGER" />
    <result column="message_type" property="messageType" jdbcType="TINYINT" />
    <result column="message_json" property="messageJson" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="is_del" property="isDel" jdbcType="BIT" />
  </resultMap>
  <resultMap id="ChatMessageDetailVOResultMap" type="com.yqz.webapp.dto.ChatMessageDetailVO">
    <result column="sender_id" property="senderId" jdbcType="INTEGER"/>
    <collection property="message" javaType="java.util.List" ofType="com.yqz.webapp.dto.InnerMessageForChatMessageDetailVO">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="message_type" property="type" jdbcType="TINYINT" />
      <result column="message_json" property="content" jdbcType="VARCHAR" />
      <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sender_id, receiver_id, message_type, message_json, create_time, is_del
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yqz.webapp.dto.ChatMessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chatmessage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from chatmessage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from chatmessage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yqz.webapp.dto.ChatMessageExample" >
    delete from chatmessage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yqz.webapp.dto.ChatMessage" >
    insert into chatmessage (id, sender_id, receiver_id, 
      message_type, message_json, create_time, 
      is_del)
    values (#{id,jdbcType=INTEGER}, #{senderId,jdbcType=INTEGER}, #{receiverId,jdbcType=INTEGER}, 
      #{messageType,jdbcType=TINYINT}, #{messageJson,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{isDel,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.yqz.webapp.dto.ChatMessage" >
    insert into chatmessage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="senderId != null" >
        sender_id,
      </if>
      <if test="receiverId != null" >
        receiver_id,
      </if>
      <if test="messageType != null" >
        message_type,
      </if>
      <if test="messageJson != null" >
        message_json,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="senderId != null" >
        #{senderId,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null" >
        #{receiverId,jdbcType=INTEGER},
      </if>
      <if test="messageType != null" >
        #{messageType,jdbcType=TINYINT},
      </if>
      <if test="messageJson != null" >
        #{messageJson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yqz.webapp.dto.ChatMessageExample" resultType="java.lang.Integer" >
    select count(*) from chatmessage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update chatmessage
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.senderId != null" >
        sender_id = #{record.senderId,jdbcType=INTEGER},
      </if>
      <if test="record.receiverId != null" >
        receiver_id = #{record.receiverId,jdbcType=INTEGER},
      </if>
      <if test="record.messageType != null" >
        message_type = #{record.messageType,jdbcType=TINYINT},
      </if>
      <if test="record.messageJson != null" >
        message_json = #{record.messageJson,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update chatmessage
    set id = #{record.id,jdbcType=INTEGER},
      sender_id = #{record.senderId,jdbcType=INTEGER},
      receiver_id = #{record.receiverId,jdbcType=INTEGER},
      message_type = #{record.messageType,jdbcType=TINYINT},
      message_json = #{record.messageJson,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_del = #{record.isDel,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yqz.webapp.dto.ChatMessage" >
    update chatmessage
    <set >
      <if test="senderId != null" >
        sender_id = #{senderId,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null" >
        receiver_id = #{receiverId,jdbcType=INTEGER},
      </if>
      <if test="messageType != null" >
        message_type = #{messageType,jdbcType=TINYINT},
      </if>
      <if test="messageJson != null" >
        message_json = #{messageJson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yqz.webapp.dto.ChatMessage" >
    update chatmessage
    set sender_id = #{senderId,jdbcType=INTEGER},
      receiver_id = #{receiverId,jdbcType=INTEGER},
      message_type = #{messageType,jdbcType=TINYINT},
      message_json = #{messageJson,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <select id="getReceivedChatMessage" resultMap="ChatMessageDetailVOResultMap" >
    select m.sender_id,m.message_type,m.message_json,m.create_time,m.id from ChatMessage m
    join  ChatMessageMark r
    on r.sender_id=m.sender_id and r.receiver_id=m.receiver_id AND r.pushed_chat_message_id &lt; r.max_chat_message_id
          where  r.max_chat_message_id &gt; r.pushed_chat_message_id
               and r.receiver_id=35109650
  </select>
</mapper>